# -*- mode: cmake; -*-
# - Try to find prometheus-cpp include dirs and libraries
# Usage of this module as follows:
# This file defines:
# * PROMETHEUS_CPP_FOUND if protoc was found
# * PROMETHEUS_CPP_LIBRARY The lib to link to (currently only a static unix lib, not
# portable)
# * PROMETHEUS_CPP_INCLUDE The include directories for prometheus-cpp.

message(STATUS "FindPrometheus check")
IF (NOT WIN32)
  include(FindPkgConfig)
  if ( PKG_CONFIG_FOUND )

     pkg_check_modules (PC_PROMETHEUS_CPP prometheus-cpp>=0.10.0)

     set(PROMETHEUS_CPP_DEFINITIONS ${PC_PROMETHEUS_CPP_CFLAGS_OTHER})
  endif(PKG_CONFIG_FOUND)
endif (NOT WIN32)

#
# set defaults
SET(_prometheus_HOME "/usr/local")
SET(_prometheus_INCLUDE_SEARCH_DIRS
  ${CMAKE_INCLUDE_PATH}
  /usr/local/include
  /usr/include
  )

SET(_prometheus_LIBRARIES_SEARCH_DIRS
  ${CMAKE_LIBRARY_PATH}
  /usr/local/lib
  /usr/lib
  )

##
if( "${PROMETHEUS_CPP_HOME}" STREQUAL "")
  if("" MATCHES "$ENV{PROMETHEUS_CPP_HOME}")
    message(STATUS "PROMETHEUS_CPP_HOME env is not set, setting it to ${_prometheus_HOME}")
    set (PROMETHEUS_CPP_HOME ${_prometheus_HOME})
  else("" MATCHES "$ENV{PROMETHEUS_CPP_HOME}")
    set (PROMETHEUS_CPP_HOME "$ENV{PROMETHEUS_CPP_HOME}")
  endif("" MATCHES "$ENV{PROMETHEUS_CPP_HOME}")
else( "${PROMETHEUS_CPP_HOME}" STREQUAL "")
  message(STATUS "PROMETHEUS_CPP_HOME is not empty: \"${PROMETHEUS_CPP_HOME}\"")
endif( "${PROMETHEUS_CPP_HOME}" STREQUAL "")
##

message(STATUS "Looking for prometheus-cpp in ${PROMETHEUS_CPP_HOME}")

IF( NOT ${PROMETHEUS_CPP_HOME} STREQUAL "" )
    SET(_prometheus_INCLUDE_SEARCH_DIRS ${PROMETHEUS_CPP_HOME}/include ${_prometheus_INCLUDE_SEARCH_DIRS})
    message(WARNING "${_prometheus_INCLUDE_SEARCH_DIRS}")
    SET(_prometheus_LIBRARIES_SEARCH_DIRS ${PROMETHEUS_CPP_HOME}/lib ${_prometheus_LIBRARIES_SEARCH_DIRS})
    SET(_PROMETHEUS_CPP_HOME ${PROMETHEUS_CPP_HOME})
ENDIF( NOT ${PROMETHEUS_CPP_HOME} STREQUAL "" )

IF( NOT $ENV{PROMETHEUS_CPP_INCLUDEDIR} STREQUAL "" )
  SET(_prometheus_INCLUDE_SEARCH_DIRS $ENV{PROMETHEUS_CPP_INCLUDEDIR} ${_prometheus_INCLUDE_SEARCH_DIRS})
ENDIF( NOT $ENV{PROMETHEUS_CPP_INCLUDEDIR} STREQUAL "" )

IF( NOT $ENV{PROMETHEUS_CPP_LIBRARYDIR} STREQUAL "" )
  SET(_prometheus_LIBRARIES_SEARCH_DIRS $ENV{PROMETHEUS_CPP_LIBRARYDIR} ${_prometheus_LIBRARIES_SEARCH_DIRS})
ENDIF( NOT $ENV{PROMETHEUS_CPP_LIBRARYDIR} STREQUAL "" )

IF( PROMETHEUS_CPP_HOME )
  SET(_prometheus_INCLUDE_SEARCH_DIRS ${PROMETHEUS_CPP_HOME}/include ${_prometheus_INCLUDE_SEARCH_DIRS})
  SET(_prometheus_LIBRARIES_SEARCH_DIRS ${PROMETHEUS_CPP_HOME}/lib ${_prometheus_LIBRARIES_SEARCH_DIRS})
  SET(_prometheus_HOME ${PROMETHEUS_CPP_HOME})
ENDIF( PROMETHEUS_CPP_HOME )

message("prometheus-cpp search: '${_prometheus_INCLUDE_SEARCH_DIRS}' ${CMAKE_INCLUDE_PATH}")
# find the include files
FIND_PATH(PROMETHEUS_CPP_INCLUDE_DIR prometheus
   HINTS
     ${_prometheus_INCLUDE_SEARCH_DIRS}
     ${PC_PROMETHEUS_CPP_INCLUDEDIR}
     ${PC_PROMETHEUS_CPP_INCLUDE_DIRS}
    ${CMAKE_INCLUDE_PATH}
)

# locate the library
# TODO: Check windows version???
#IF(WIN32)
#  SET(PROMETHEUS_CPP_LIBRARY_NAMES ${PROMETHEUS_CPP_LIBRARY_NAMES} libjson.lib)
#ELSE(WIN32)
SET(PROMETHEUS_CPP_LIBRARY_CORE_NAMES ${PROMETHEUS_CPP_LIBRARY_CORE_NAMES} libprometheus-cpp-core.a)
# TODO: Remove additional libraries if Prometheus::Exposer is no longer needed!
SET(PROMETHEUS_CPP_LIBRARY_PUSH_NAMES ${PROMETHEUS_CPP_LIBRARY_PUSH_NAMES} libprometheus-cpp-push.a)
SET(PROMETHEUS_CPP_LIBRARY_PULL_NAMES ${PROMETHEUS_CPP_LIBRARY_PULL_NAMES} libprometheus-cpp-pull.a)
#ENDIF(WIN32)
FIND_LIBRARY(PROMETHEUS_CPP_LIBRARY_CORE NAMES ${PROMETHEUS_CPP_LIBRARY_CORE_NAMES}
  HINTS
    ${_prometheus_LIBRARIES_SEARCH_DIRS}
    ${PC_PROMETHEUS_CPP_LIBDIR}
    ${PC_PROMETHEUS_CPP_LIBRARY_DIRS}
)
SET(PROMETHEUS_CPP_LIBRARY ${PROMETHEUS_CPP_LIBRARY_CORE})

# TODO: Remove additional libraries if Prometheus::Exposer is no longer needed!
FIND_LIBRARY(PROMETHEUS_CPP_LIBRARY_PUSH NAMES ${PROMETHEUS_CPP_LIBRARY_PUSH_NAMES}
  HINTS
    ${_prometheus_LIBRARIES_SEARCH_DIRS}
    ${PC_PROMETHEUS_CPP_LIBDIR}
    ${PC_PROMETHEUS_CPP_LIBRARY_DIRS}
)

FIND_LIBRARY(PROMETHEUS_CPP_LIBRARY_PULL NAMES ${PROMETHEUS_CPP_LIBRARY_PULL_NAMES}
  HINTS
  ${_prometheus_LIBRARIES_SEARCH_DIRS}
  ${PC_PROMETHEUS_CPP_LIBDIR}
  ${PC_PROMETHEUS_CPP_LIBRARY_DIRS}
)

# if the include and the program are found then we have it
IF(PROMETHEUS_CPP_LIBRARY_CORE)
  SET(PROMETHEUS_CPP_FOUND "YES")
  SET(PROMETHEUS_CPP_FOUND_CORE "YES")
  message("prometheus-cpp (Core) found: '${PROMETHEUS_CPP_LIBRARY_CORE}'")
  SET(PROMETHEUS_CPP_INCLUDE_DIR ${PROMETHEUS_CPP_INCLUDE_DIR})
ENDIF(PROMETHEUS_CPP_LIBRARY_CORE)

IF(PROMETHEUS_CPP_LIBRARY_PUSH)
  SET(PROMETHEUS_CPP_FOUND_PUSH "YES")
  message("prometheus-cpp (Push) found: '${PROMETHEUS_CPP_LIBRARY_PUSH}'")
  SET(PROMETHEUS_CPP_INCLUDE_DIR ${PROMETHEUS_CPP_INCLUDE_DIR})
ENDIF(PROMETHEUS_CPP_LIBRARY_PUSH)

IF(PROMETHEUS_CPP_LIBRARY_PULL)
  SET(PROMETHEUS_CPP_FOUND_PULL "YES")
  message("prometheus-cpp (Pull) found: '${PROMETHEUS_CPP_LIBRARY_PULL}'")
  SET(PROMETHEUS_CPP_INCLUDE_DIR ${PROMETHEUS_CPP_INCLUDE_DIR})
ENDIF(PROMETHEUS_CPP_LIBRARY_PULL)

# TODO: Remove??
#if( NOT WIN32)
#  list(APPEND PROMETHEUS_CPP_LIBRARY "-lrt")
#endif( NOT WIN32)

MARK_AS_ADVANCED(
  PROMETHEUS_CPP_FOUND
  PROMETHEUS_CPP_FOUND_CORE
  PROMETHEUS_CPP_FOUND_PULL
  PROMETHEUS_CPP_FOUND_PUSH
  PROMETHEUS_CPP_LIBRARY
  PROMETHEUS_CPP_LIBRARY_CORE
  PROMETHEUS_CPP_LIBRARY_PULL
  PROMETHEUS_CPP_LIBRARY_PUSH
  PROMETHEUS_CPP_INCLUDE_DIR
)
